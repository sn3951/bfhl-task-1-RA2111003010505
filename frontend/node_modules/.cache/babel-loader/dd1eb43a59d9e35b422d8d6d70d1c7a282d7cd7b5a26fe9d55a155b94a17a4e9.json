{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\bfhl-main-20240922T120421Z-001\\\\bfhl-main\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'numbers',\n  label: 'Numbers'\n}, {\n  value: 'alphabets',\n  label: 'Alphabets'\n}, {\n  value: 'highest_alphabet',\n  label: 'Highest Alphabet'\n}];\nfunction App() {\n  _s();\n  const [jsonInput, setJsonInput] = useState('');\n  const [responseData, setResponseData] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const handleSubmit = async () => {\n    try {\n      const parsedData = JSON.parse(jsonInput);\n      if (!Array.isArray(parsedData.data)) {\n        throw new Error('Invalid JSON format. \"data\" should be an array.');\n      }\n      console.log('Parsed Data:', parsedData);\n      const response = await axios.post('https://bfhl-io3z.onrender.com/bfhl', parsedData);\n      console.log('API Response:', response.data);\n      setResponseData(response.data);\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Error: ${error.response ? error.response.data : error.message}`);\n    }\n  };\n  const filteredResponse = () => {\n    if (!responseData) return null;\n    const {\n      numbers,\n      alphabets,\n      highest_alphabet\n    } = responseData;\n    let filtered = {};\n    if (selectedOptions.find(option => option.value === 'numbers')) {\n      filtered.numbers = numbers.join(', ');\n    }\n    if (selectedOptions.find(option => option.value === 'alphabets')) {\n      filtered.alphabets = alphabets.join(', ');\n    }\n    if (selectedOptions.find(option => option.value === 'highest_alphabet')) {\n      filtered.highest_alphabet = highest_alphabet.join(', ');\n    }\n    return filtered;\n  };\n  const renderedResponse = filteredResponse();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bajaj Finserv Health Dev Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"API Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: jsonInput,\n      onChange: e => setJsonInput(e.target.value),\n      placeholder: \"Enter JSON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: option.value,\n          checked: selectedOptions.some(selected => selected.value === option.value),\n          onChange: e => {\n            const isChecked = e.target.checked;\n            if (isChecked) {\n              setSelectedOptions([...selectedOptions, option]);\n            } else {\n              setSelectedOptions(selectedOptions.filter(selected => selected.value !== option.value));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), option.label]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), renderedResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filtered Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), renderedResponse.numbers && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Numbers: \", renderedResponse.numbers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 40\n      }, this), renderedResponse.alphabets && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Alphabets: \", renderedResponse.alphabets]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 42\n      }, this), renderedResponse.highest_alphabet && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Highest Alphabet: \", renderedResponse.highest_alphabet]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"554Fn3iQL/P6cjKRVDl/n0SO9tU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Select","jsxDEV","_jsxDEV","options","value","label","App","_s","jsonInput","setJsonInput","responseData","setResponseData","selectedOptions","setSelectedOptions","handleSubmit","parsedData","JSON","parse","Array","isArray","data","Error","console","log","response","post","error","alert","message","filteredResponse","numbers","alphabets","highest_alphabet","filtered","find","option","join","renderedResponse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","placeholder","onClick","map","type","checked","some","selected","isChecked","filter","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/bfhl-main-20240922T120421Z-001/bfhl-main/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport './App.css'; \n\nconst options = [\n  { value: 'numbers', label: 'Numbers' },\n  { value: 'alphabets', label: 'Alphabets' },\n  { value: 'highest_alphabet', label: 'Highest Alphabet' }\n];\n\nfunction App() {\n  const [jsonInput, setJsonInput] = useState('');\n  const [responseData, setResponseData] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  const handleSubmit = async () => {\n    try {\n      const parsedData = JSON.parse(jsonInput);\n      if (!Array.isArray(parsedData.data)) {\n        throw new Error('Invalid JSON format. \"data\" should be an array.');\n      }\n      console.log('Parsed Data:', parsedData); \n      const response = await axios.post('https://bfhl-io3z.onrender.com/bfhl', parsedData);\n      console.log('API Response:', response.data); \n      setResponseData(response.data);\n    } catch (error) {\n      console.error('Error:', error); \n      alert(`Error: ${error.response ? error.response.data : error.message}`);\n    }\n  };\n\n  const filteredResponse = () => {\n    if (!responseData) return null;\n    const { numbers, alphabets, highest_alphabet } = responseData;\n    let filtered = {};\n    if (selectedOptions.find(option => option.value === 'numbers')) {\n      filtered.numbers = numbers.join(', ');\n    }\n    if (selectedOptions.find(option => option.value === 'alphabets')) {\n      filtered.alphabets = alphabets.join(', ');\n    }\n    if (selectedOptions.find(option => option.value === 'highest_alphabet')) {\n      filtered.highest_alphabet = highest_alphabet.join(', ');\n    }\n    return filtered;\n  };\n\n  const renderedResponse = filteredResponse();\n\n  return (\n    <div className=\"App\">\n      <h1>Bajaj Finserv Health Dev Challenge</h1>\n      <h1>API Input</h1>\n      <textarea\n        value={jsonInput}\n        onChange={(e) => setJsonInput(e.target.value)}\n        placeholder=\"Enter JSON\"\n      />\n      <button onClick={handleSubmit}>Submit</button>\n\n      {/* Replace Select component with checkboxes */}\n      <div>\n        <h2>Select Options</h2>\n        {options.map((option) => (\n          <label key={option.value}>\n            <input\n              type=\"checkbox\"\n              value={option.value}\n              checked={selectedOptions.some(\n                (selected) => selected.value === option.value\n              )}\n              onChange={(e) => {\n                const isChecked = e.target.checked;\n                if (isChecked) {\n                  setSelectedOptions([...selectedOptions, option]);\n                } else {\n                  setSelectedOptions(\n                    selectedOptions.filter(\n                      (selected) => selected.value !== option.value\n                    )\n                  );\n                }\n              }}\n            />\n            {option.label}\n          </label>\n        ))}\n      </div>\n      {renderedResponse && (\n        <div>\n          <h2>Filtered Response</h2>\n          {renderedResponse.numbers && <p>Numbers: {renderedResponse.numbers}</p>}\n          {renderedResponse.alphabets && <p>Alphabets: {renderedResponse.alphabets}</p>}\n          {renderedResponse.highest_alphabet && (\n            <p>Highest Alphabet: {renderedResponse.highest_alphabet}</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}